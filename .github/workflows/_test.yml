name: _ Run Tests
on:
  workflow_call:
    inputs:
      use-devnet:
        type: boolean
        default: false
      ignore-scripts:
        type: boolean
        default: false
      protocol:
        # RPC, WS
        type: string
      node:
        # Juno, Pathfinder
        type: string
      version:
        # vX_Y
        type: string
    secrets:
      TEST_NODE_URL:
        required: false
      TEST_WS_JUNO:
        required: false
      TEST_ACCOUNT_PRIVATE_KEY:
        required: false
      TEST_ACCOUNT_ADDRESS:
        required: false

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    # TODO - periodically check if conditional services are supported; https://github.com/actions/runner/issues/822
    services:
      devnet:
        image: ${{ (inputs.use-devnet) && 'shardlabs/starknet-devnet-rs:0.5.0-rc.4' || '' }}
        ports:
          - 5050:5050

    env:
      PROTOCOL: ${{ inputs.protocol == 'WS' && 'wss' || inputs.protocol == 'RPC' && 'https' || '' }}
      NODE: ${{ inputs.node == 'Juno' && 'juno' || inputs.node == 'Pathfinder' && 'pathfinder' || '' }}
      VERSION: ${{ inputs.version }}

      NODE_URL: ${{ secrets.TEST_NODE_URL }}
      TEST_ACCOUNT_PRIVATE_KEY: ${{ secrets.TEST_ACCOUNT_PRIVATE_KEY }}
      TEST_ACCOUNT_ADDRESS: ${{ secrets.TEST_ACCOUNT_ADDRESS }}

      DEVNET_RPC_URL: 'http://127.0.0.1:5050/rpc'
      DEVNET_WS_URL: 'ws://127.0.0.1:5050/ws'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci --ignore-scripts
      - run: npm run pretest && npm run posttest
        if: ${{ !inputs.ignore-scripts }}
      - id: env-modification
        name: env modification
        run: |
          echo "::add-mask::$FORMATED_URL"
          echo "NODE_URL=$FORMATED_URL" >> "$GITHUB_OUTPUT"
        if: ${{ !!env.FORMATED_URL }}
        env:
          FORMATED_URL: ${{ format(env.NODE_URL, env.PROTOCOL, env.NODE, env.VERSION) }}
      - id: url-resolution
        name: url-resolution
        run: |
          echo "DEVNET_RPC_URL=$DEVNET_RPC_URL" >> "$GITHUB_OUTPUT"
          echo "DEVNET_WS_URL=$DEVNET_WS_URL" >> "$GITHUB_OUTPUT"
          echo "REMOTE_RPC_URL=$REMOTE_RPC_URL" >> "$GITHUB_OUTPUT"
          echo "REMOTE_WS_URL=$REMOTE_WS_URL" >> "$GITHUB_OUTPUT"
        env:
          DEVNET_RPC_URL: ${{ inputs.use-devnet && env.DEVNET_RPC_URL || null }}
          DEVNET_WS_URL: ${{ inputs.use-devnet && inputs.protocol == 'WS' && env.DEVNET_WS_URL || null }}
          REMOTE_RPC_URL: ${{ inputs.protocol != 'WS' && steps.env-modification.outputs.NODE_URL || null }}
          REMOTE_WS_URL: ${{ inputs.protocol == 'WS' && (env.NODE == 'juno' && secrets.TEST_WS_JUNO || steps.env-modification.outputs.NODE_URL) || null }}
      - id: run-tests
        name: run tests
        run: |
          args=()
          [[ "${{ inputs.protocol }}" == "WS" ]] && args+=( '__tests__/WebSocket' )
          npm run test:coverage "${args[@]}"
        env:
          TEST_RPC_URL: ${{ steps.url-resolution.outputs.DEVNET_RPC_URL || steps.url-resolution.outputs.REMOTE_RPC_URL }}
          TEST_WS_URL: ${{ steps.url-resolution.outputs.DEVNET_WS_URL || steps.url-resolution.outputs.REMOTE_WS_URL }}
          TEST_ACCOUNT_PRIVATE_KEY: ${{ secrets.TEST_ACCOUNT_PRIVATE_KEY }}
          TEST_ACCOUNT_ADDRESS: ${{ secrets.TEST_ACCOUNT_ADDRESS }}
